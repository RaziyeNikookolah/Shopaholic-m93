services:
  db:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_DB=online_shoes_shopping
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
    networks:
      - main_net
    ports:
      - "5432:5432"
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql/data

  celery_worker:
    container_name: celery_worker
    command: "celery -A onlineshop worker -l INFO"
    build: .
    depends_on:
      - redis
      - db
      - djangoonlineshop

    environment:
      - C_FORCE_ROOT="true"
    networks:
      - main_net
    restart: on_failure

  celery_beat:
    container_name: celery_beat
    command: "celery -A onlineshop beat -l info"
    build: .
    depends_on:
      - celery_worker
      - redis
      - djangoonlineshop
      - db

    environment:
      - C_FORCE_ROOT="true"
    networks:
      - main_net
    restart: on_failure

  djangoonlineshop:
    build: .
    command: sh -c "python manage.py makemigrations && python manage.py migrate && gunicorn onlineshop.wsgi:application 0.0.0.0:8000"

    container_name: djangoonlineshop
    volumes:
      - .:/djangoonlineshop
    depends_on:
      - db
      - redis
    expose:
      - "8000"
    networks:
      - main_net
    ports:
      - "8000:8000"
    restart: on-failure

  redis:
    container_name: redis
    image: redis:latest
    networks:
      - main_net
    ports:
      - "6379:6379"
    restart: on-failure

  nginx:
    container_name: nginx
    command: nginx -g "daemon off;"
    depends_on:
      - djangoonlineshop
    image: nginx:latest
    networks:
      - main_net
    ports:
      - "80:80"
    restart: on_failure
    volumes:
      - ./nginx-config:/etc/nginx/conf.d

volumes:
  postgres_data:


networks:
  main_net:


